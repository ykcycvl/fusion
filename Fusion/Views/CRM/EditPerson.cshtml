@model Fusion.Models.RKCRM.EditHoldersModel

@{
    ViewBag.Title = "Редактирование владельца";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    /*Этот код Андрея Головчака*/
    function deleteContact(r)
    {
        var i=r.parentNode.parentNode.rowIndex;
        var k = i-1;
        var j = document.getElementById("Holder_Contacts_"+k+"__Contact_ID");
        if(j) {
            var deleted = document.getElementById("Holder_Contacts_"+k+"__Deleted");
            if(deleted.value == "No" || deleted.value=="False") {
                document.getElementById("contactstable").rows[i].style.backgroundColor = "#E63E15";
                deleted.value="True";
            }
            else if(deleted.value == "Yes" || deleted.value == "True") {
                document.getElementById("contactstable").rows[i].style.backgroundColor = "white";
                deleted.value="False";
            }

        }
        else {
            document.getElementById('contactstable').deleteRow(i);
            ccontc--; //насчет этого не уверен, как правильно надо написать про счетчик контактов.
        }
    }
    /*Здесь заканчивается код Андрея Головчака*/

    $(function () {
        var cc = @Model.Holder.Cards.Count;
        var ccontc = @Model.Holder.Contacts.Count;
        var ac = @Model.Holder.Accounts.Count;

        $("#AddCardBtn").click(function () {
            $('#cardstable > tbody:last').append('<tr><input id="Holder_Cards_' + cc + '__Group_ID" name="Holder.Cards[' + cc + '].Group_ID" type="hidden" value="44"><input id="Holder_Cards_' + cc + '__Status" name="Holder.Cards[' + cc + '].Status" type="hidden" value="Active"><td><input class="form-control" id="Holder_Cards_' + cc + '__Card_Code" name="Holder.Cards[' + cc + '].Card_Code" type="text" style="width:130px"></td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>');
            $("#AddCardBtn").hide();
            cc++;
            return false;
        });
        $("#AddContactBtn").click(function () {
            $('#contactstable > tbody:last').append('<tr><input id="Holder_Contacts_' + ccontc + '__Dispatch" name="Holder.Contacts[' + ccontc + '].Dispatch" type="hidden" value="Yes"><td><select class="form-control" id="Holder_Contacts_' + ccontc + '__Type_ID" name="Holder.Contacts[' + ccontc + '].Type_ID"><option selected="selected" value="254">Мобильный</option><option value="252">Email</option></select></td><td><input class="form-control text-box single-line" id="Holder_Contacts_' + ccontc + '__Value" name="Holder.Contacts[' + ccontc + '].Value" type="text" value=""></td><td><input class="form-control text-box single-line" id="Holder_Contacts_' + ccontc + '__Notes" name="Holder.Contacts[' + ccontc + '].Notes" type="text" value=""></td><td style="border-bottom: 0px; border-right: 0px; border-top: 0px;"><button type="button" id="deleteButton" class="btn btn-danger" onclick="deleteContact(this)">-</button></td></tr>');
            ccontc++;
            return false;
        });
        $("#AddAccountBtn").click(function () {
            $('#accountstable > tbody:last').append('<tr><input id="Holder_Accounts_' + ac + '__Auto_Change_Levels" name="Holder.Accounts[' + ac + '].Auto_Change_Levels" type="hidden" value="False"><td>-</td><td><select class="form-control" id="Holder_Accounts_' + ac + '__Account_Type_ID" name="Holder.Accounts[' + ac + '].Account_Type_ID"><option value="16">Море плюсов (бонусный)</option><option value="72">SaintFish (бонусный)</option><option value="74">SaintFish Дисконт</option><option value="11">Потраты</option><option value="18">Дисконтный</option></select></td><td colspan="4">&nbsp;</td></tr>');
            ac++;
            return false;
        });
        $("#AddTransactionDialog").dialog({
            buttons: {
                "ОК": function () {
                    $("#TransactionResult").load("/CRM/AddTransaction", "CardCode=" + $("#CardCode").val() + "&bp=" + $("#BP").val());
                    $(".ui-dialog-buttonpane button:contains('ОК')").button("disable");
                },
                "Закрыть": function () {
                    $(this).dialog("close");
                }
            },
            close: function (event, ui) { location.reload(); },
            modal: true,
            width: 400,
            height: 250,
            autoOpen: false,
            draggable: false,
            closeText: '',
            resizable: false
        });
    });
</script>





<h2>Редактирование владельца</h2>
@if (Model.LastResult != "")
{
    <p class="alert alert-danger">@Model.LastResult</p>
}
<br />
@using (Html.BeginForm("EditPerson", "CRM"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => Model.Holder.Holder_ID)
    @Html.HiddenFor(m => Model.Holder.External_Code)
    @Html.HiddenFor(m => Model.Holder.Unpay_Type_ID)

    <div class="row">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-xs-6 col-md-4">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    Основные данные
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Holder.Group_ID, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(m => m.Holder.Group_ID, Model.Holder.GroupSelectList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Holder.Group_ID, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => Model.Holder.L_Name, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(m => Model.Holder.L_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => Model.Holder.L_Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => Model.Holder.F_Name, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(m => Model.Holder.F_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => Model.Holder.F_Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => Model.Holder.M_Name, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(m => Model.Holder.M_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => Model.Holder.M_Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => Model.Holder.BirthD, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(m => Model.Holder.BirthD, "{0:dd.MM.yyyy}", new { @class = "form-control date" })
                        @Html.ValidationMessageFor(m => Model.Holder.BirthD, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="panel-footer">
                    <input type="submit" value="Сохранить" class="btn btn-primary" />
                </div>
            </div>
            <div class="panel panel-info">
                <div class="panel-heading">
                    История операций
                </div>
                <div class="panel-body">
                    Просмотр всех транзакций по бонусному счету гостя. По операциям, которые не проводились на заказ в кипере, чек не формируется!
                </div>
                <div class="panel-footer">
                    @Html.ActionLink("Просмотр истории операций", "Transactions", new { @people_id = Model.Holder.Holder_ID }, new { @class = "btn btn-success" })
                </div>
            </div>
        </div>
        <div class="col-xs-12 col-md-8">
            <div class="panel panel-green">
                <div class="panel-heading">
                    Контактная информация
                    <a href="#" id="AddContactBtn" class="btn btn-default" style="float:right">Добавить</a>
                    <div style="clear:both"></div>
                </div>
                <div class="panel-body">
                    @if (Model.Holder.Contacts != null)
                    {
                        <table class="table table-bordered" id="contactstable" style="margin-bottom:0">
                            <tr>
                                <th>Тип контакта</th>
                                <th>Значение</th>
                                <th>Примечание</th>
                                <th>&nbsp;</th>
                            </tr>
                            @for (int i = 0; i < Model.Holder.Contacts.Count; i++)
                            {
                                <tr>
                                    @Html.HiddenFor(m => Model.Holder.Contacts[i].Contact_ID)
                                    @Html.HiddenFor(m => Model.Holder.Contacts[i].Deleted)
                                    @Html.HiddenFor(m => Model.Holder.Contacts[i].Dispatch)
                                    @Html.HiddenFor(m => Model.Holder.Contacts[i].Type_ID)
                                    @Html.HiddenFor(m => Model.Holder.Contacts[i].Type_Name)

                                    <td>
                                        @Model.Holder.Contacts[i].Type_Name
                                    </td>

                                    <td>
                                        @Html.EditorFor(m => Model.Holder.Contacts[i].Value, new { htmlAttributes = new { @class = "form-control" } })
                                    </td>

                                    <td>
                                        @Html.EditorFor(m => Model.Holder.Contacts[i].Notes, new { htmlAttributes = new { @class = "form-control" } })
                                    </td>

                                    <td style="border-bottom: 0px; border-right: 0px; border-top: 0px;">
                                        <button type="button" id="deleteButton" class="btn btn-danger" onclick="deleteContact(this)">-</button>
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                </div>
            </div>
            <div class="panel panel-yellow">
                <div class="panel-heading">Карты</div>
                <div class="panel-body">
                    @if (Model.Holder.Cards != null)
                    {
                        <table class="table table-bordered" id="cardstable" style="margin-bottom:0">
                            <tr>
                                <th>Номер</th>
                                <th>Статус</th>
                                <th>Выпущена</th>
                                <th>Истекает</th>
                                <th>Группа</th>
                            </tr>
                            @for (int i = 0; i < Model.Holder.Cards.Count; i++)
                            {                                
                                <tr>
                                    @Html.HiddenFor(m => Model.Holder.Cards[i].Card_Code)
                                    @Html.HiddenFor(m => Model.Holder.Cards[i].Group_ID)
                                    @Html.HiddenFor(m => Model.Holder.Cards[i].Group_Name)
                                    @Html.HiddenFor(m => Model.Holder.Cards[i].Holder_ID)
                                    @Html.HiddenFor(m => Model.Holder.Cards[i].Is_Confirm_Manager)
                                    @Html.HiddenFor(m => Model.Holder.Cards[i].Offered)
                                    @Html.HiddenFor(m => Model.Holder.Cards[i].OfferedD)
                                    @Html.HiddenFor(m => Model.Holder.Cards[i].Owner_ID)

                                    <td>
                                        @Model.Holder.Cards[i].Card_Code
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(m => Model.Holder.Cards[i].Status, Model.Holder.Cards[i].StatusSelectList, new { @class = "form-control" })
                                    </td>
                                    <td>
                                        @Model.Holder.Cards[i].OfferedD.ToString("dd.MM.yyyy")
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(m => Model.Holder.Cards[i].ExpiredD, "{0:dd.MM.yyyy}", new { @class = "form-control date", @style = "width:110px" })
                                    </td>
                                    <td>
                                        @Model.Holder.Cards[i].Group_Name
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                </div>
                <div class="panel-footer">
                    <a href="#" id="AddCardBtn" class="btn btn-default">Добавить карту</a>
                </div>
            </div>
            <div class="panel panel-info">
                <div class="panel-heading">Счета</div>
                <div class="panel-body">
                    @if (Model.Holder.Accounts != null)
                    {
                        <table class="table table-bordered" id="accountstable">
                            <tr>
                                <th>Номер счета</th>
                                <th>Тип</th>
                                <th>Создан</th>
                                <th>Статус</th>
                                <th>Баланс</th>
                                <th>&nbsp;</th>
                            </tr>
                            @for (int i = 0; i < Model.Holder.Accounts.Count; i++)
                            {
                                string bgcolorattr = "style=background:#86d086";

                                if (Model.Holder.Accounts[i].Status == "Blocked")
                                {
                                    bgcolorattr = "style=background:#f99";
                                }

                                <tr @bgcolorattr>
                                    <td>
                                        @Html.HiddenFor(m => Model.Holder.Accounts[i].Account_Number)
                                        @Html.HiddenFor(m => Model.Holder.Accounts[i].Account_Level_ID)
                                        @Html.HiddenFor(m => Model.Holder.Accounts[i].Status)
                                        @Model.Holder.Accounts[i].Account_Number
                                    </td>
                                    <td>
                                        @Model.Holder.Accounts[i].Account_Type_Name
                                    </td>
                                    <td>
                                        @DateTime.Parse(Model.Holder.Accounts[i].Create).ToString("dd.MM.yyyy")
                                    </td>
                                    <td>
                                        @Model.Holder.Accounts[i].Status
                                    </td>
                                    <td>
                                        @Model.Holder.Accounts[i].Balance
                                    </td>
                                    <td>
                                        @if (@Model.Holder.Accounts[i].Account_Type_ID == "16")
                                        {
                                            <a href="#" id="AddTransactionBtn">Пополнение/Списание</a>

                                            <script>
                                                $(function () {
                                                    $("#AddTransactionBtn").click(function () {
                                                        $("#AddTransactionDialog").dialog("open");
                                                        return false;
                                                    });
                                                });
                                            </script>
                                        }
                                        else
                                        {
                                            <b>&nbsp;</b>
                                        }
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                </div>
                <div class="panel-footer">
                    <a href="#" id="AddAccountBtn" class="btn btn-default">Добавить счет</a>
                </div>
            </div>
        </div>
    </div>
    <div class="form-horizontal">
        <div id="AddTransactionDialog" title="Ручное списание/начисление баллов">
            <div class="form-group">
                <div class="col-md-10">
                    <label>Выберите карту</label>
                    <select id="CardCode">
                        @foreach (var c in Model.Holder.Cards)
                        {
                            if (c.Status == "Active")
                            {
                                <option value="@c.Card_Code">@c.Card_Code</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    <label>Сумма операции</label>
                    @Html.TextBox("BP", null, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <p id="TransactionResult"></p>
            </div>
        </div>
    </div>
}