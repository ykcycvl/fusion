@model Fusion.Models.SB
@{
    ViewBag.Title = "Problems";
    Layout = "~/Views/Shared/_LayoutWide.cshtml";
} 
<link href="//cdn.datatables.net/1.10.2/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="//cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js"></script>
<style>
    .monthpicker > .ui-datepicker-calendar {
        display: none;
    }
    .monthpicker > .ui-datepicker {
        z-index: 9999 !important;
    }
    .records {
        height: 200px;
    }
    textarea {
        height: 200px !important;
    }
</style>
<script>
    $(document).ready(function () {
        $("#AddTransactionDialog").dialog({
            buttons: {
                "Закрыть": function () {
                    $(this).dialog("close");
                }
            },
            close: function (event, ui) { },
            modal: true,
            width: 450,
            height: 550,
            autoOpen: false,
            draggable: true,
            closeText: '',
            resizable: true
        });
        $("#AddTransactionBtn").click(function () {
            $("#AddTransactionDialog").dialog("open");
            return false;
        });
        $('.date-picker').datepicker({
            changeMonth: true,
            changeYear: true,
            showButtonPanel: true,
            dateFormat: 'd.m.yy'
        });
        $('.monthpicker').datepicker({
            changeMonth: true,
            changeYear: true,
            showButtonPanel: true,
            dateFormat: 'm.yy',
            onClose: function (dateText, inst) {
                $(this).datepicker('setDate', new Date(inst.selectedYear, inst.selectedMonth, 1));
                window.location.href = '/SB_Problems/Problems?period=' + $("#Period").val();
            }
        });
        $('#addRow').click(function () {
            window.location.href = '/SB_Problems/SendProblem';
        });
    });
</script>
<style>
    th {
        text-align: center;
    }
</style>
<h2>Замечания</h2>

@using (Html.BeginForm("Problems", "SB_Problems", FormMethod.Post, new { id = "Form" }))
{
    @Html.TextBoxFor(m => m.Period, new { @class = "monthpicker" })
    <div id="wrapper">
        <button id="AddTransactionBtn" class="btn btn-danger">Отчет</button>
        <input type="submit" value="Сохранить" class="btn btn-success" id="sub" />
        @if (LoginViewModel.IsMemberOf(Model.username, "SB_Admin"))
        {
        <input type="button" class="btn btn-primary" id="addRow" value="Добавить замечание" />
        }
        <table class="table table-bordered table-striped" id="myTable">
            <thead>
                <tr>
                    <th style="display: none">ИД</th>
                    <th>Дата</th>
                    <th>Ресторан</th>
                    <th>Замечание</th>
                    <th>Решение</th>
                    <th>Ответственный</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.problems.Count(); i++)
                {
                    string color = "";
                    string adminColor = "";
                    if (Model.problems[i].sb_managers.domain_name == Model.username && (Model.problems[i].solution == null || Model.problems[i].solution == ""))
                    {
                        color = "#d9534f";
                    }
                    else if (Model.problems[i].sb_managers.domain_name == Model.username && (Model.problems[i].solution != null || Model.problems[i].solution != ""))
                    {
                        color = "#5cb85c";
                    }
                    else
                    {
                        color = "";
                    }
                    if (Model.problems[i].solution != "" && Model.problems[i].solution != null)
                    {
                        adminColor = "#5cb85c";
                    }
                    else
                    {
                        adminColor = "#d9534f";
                    }
                    Model.RestaurantName = Model.problems[i].sb_restaurants.restaurant_name;
                    Model.ManagerName = Model.problems[i].sb_managers.name;
                    <tr style="display: none;">
                        <td>@Html.HiddenFor(m => m.problems[i].id)</td>
                        <td>@Html.HiddenFor(m => m.problems[i].date)</td>
                    </tr>
                    if (LoginViewModel.IsMemberOf(Model.username, "SB_Admin") || LoginViewModel.IsMemberOf(Model.username, "FusionAdmin"))
                    {
                            <tr class="records" style="background-color: @adminColor">
                                <td id="di" style="display: none">@Model.problems[i].id</td>
                                <td>@Html.TextBoxFor(m => m.problems[i].date, new { @type = "date", @Value = Model.problems[i].date.Value.ToString("yyyy-MM-dd"), @class = "form-control", @required = "true" })</td>
                                <td>@Html.DropDownListFor(m => m.problems[i].restaurant_id, Model.RestaurantsSelectList, new { @class = "form-control" })</td>
                                <td>@Html.TextAreaFor(m => m.problems[i].problem, new { @class = "form-control" })</td>
                                <td>@Html.TextAreaFor(m => m.problems[i].solution, new { @class = "form-control" })</td>
                                <td>@Html.DropDownListFor(m => m.problems[i].sb_managers.id, Model.ManagersSelectList, new { @class = "form-control" })</td>
                                @Html.HiddenFor(m => m.problems[i].id)
                                @Html.HiddenFor(m => m.problems[i].sb_managers.name)
                            </tr>
                    }
                    else
                    {
                            <tr class="records" style="background-color: @color">
                                <td id="di" style="display: none">@Model.problems[i].id</td>
                                <td>@Html.TextBoxFor(m => m.problems[i].date, new { @type = "date", @Value = Model.problems[i].date.Value.ToString("yyyy-MM-dd"), @disabled = "true", @class = "form-control" })</td>
                                <td>@Html.DropDownListFor(m => m.problems[i].restaurant_id, Model.RestaurantsSelectList, new { @disabled = "true", @class = "form-control" })</td>
                                <td>@Html.TextAreaFor(m => m.problems[i].problem, new { @class = "form-control", @disabled = "true" })</td>
                                <td>@Html.TextAreaFor(m => m.problems[i].solution, new { @class = "form-control" })</td>
                                <td>@Html.TextBoxFor(m => m.problems[i].sb_managers.name, new { @disabled = "true", @class = "form-control" })</td>
                                @Html.HiddenFor(m => m.problems[i].id)
                                @Html.HiddenFor(m => m.problems[i].sb_managers.name)
                            </tr>
                    }
                }
            </tbody>
        </table>
    </div>

}
<div id="AddTransactionDialog" title="Отчет по жалобам">
    <span>
        Всего пришло жалоб: @Model.problems.Count
        <br />
        Неотвеченных: @Model.problems.Where(m => m.solution == "" || m.solution == null).Count() <br />
        Из них по: <br />
        <p>
            Каваи: @Model.problems.Where(m => m.sb_restaurants.restaurant_name == "Каваи").Count() <br />
            Киото: @Model.problems.Where(m => m.sb_restaurants.restaurant_name == "Киото").Count() <br />
            Находка: @Model.problems.Where(m => m.sb_restaurants.restaurant_name == "Находка").Count() <br />
            Уссурийск: @Model.problems.Where(m => m.sb_restaurants.restaurant_name == "Уссурийск").Count() <br />
            Хоум: @Model.problems.Where(m => m.sb_restaurants.restaurant_name == "Хоум").Count() <br />
            Гайдамак: @Model.problems.Where(m => m.sb_restaurants.restaurant_name == "Гайдамак").Count() <br />
            Фабрика: @Model.problems.Where(m => m.sb_restaurants.restaurant_name == "Фабрика").Count() <br />
            Находка 2 этаж: @Model.problems.Where(m => m.sb_restaurants.restaurant_name == "Находка 2 этаж").Count() <br />
            Офис: @Model.problems.Where(m => m.sb_restaurants.restaurant_name == "Офис").Count()
        </p>
    </span>
</div>