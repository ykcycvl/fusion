@model Fusion.Models.SKK.SKKModels
@{
    ViewBag.Title = "Analytics";
    Layout = "~/Views/Shared/_LayoutWide.cshtml";
    string chartTitle = String.Format("'Результаты ресторанов в динамике {0}.{1}/{2}.{3}'", Model.date_start.Value.Month, Model.date_start.Value.Year, Model.date_end.Value.Month, Model.date_end.Value.Year);
    string DataTable = "[";
    string DataTable2 = "[";
    foreach (var it in Model.PercentsList)
    {
        DataTable += "{";
        DataTable += String.Format("'arg':'{0}', 'val1': {1}, 'val2': {2}", it.restaurantName, it.percent_prev, it.percent_today);
        DataTable += "},\r\n";
    }
    DataTable += "]";
    double? mediana = 0;
    double? medianaBlock = 0;
    foreach (var it in Model.PercentsList)
    {
        mediana += it.percent_today;
    }
    mediana = mediana / Model.PercentsList.Count;
    int i = 0;
    foreach (var it in Model.blocksList)
    {
        double? weight_now = Model.Articles.Where(g => g.ArticleBlock.name == it.blockName).Sum(r => r.weight) * Model.percentsBlockList.Where(b => b.blockName == it.blockName && b.date.Value.Month == Model.date_end.Value.Month && b.date.Value.Year == Model.date_end.Value.Year).Count();
        double? weight_prev = Model.Articles.Where(g => g.ArticleBlock.name == it.blockName).Sum(r => r.weight) * Model.percentsBlockList.Where(b => b.blockName == it.blockName && b.date.Value.Month == Model.date_start.Value.Month && b.date.Value.Year == Model.date_start.Value.Year).Count();
        double? rating_now = (it.ratingNow * 100) / weight_now;
        double? rating_prev = (it.ratingPrev * 100) / weight_prev;
        DataTable2 += "{";
        DataTable2 += String.Format("'arg':'{0}', 'val1': {1}, 'val2' : {2}", it.blockName, Math.Round((double)rating_prev, 2), Math.Round((double)rating_now, 2));
        DataTable2 += "},\r\n";
        medianaBlock += rating_now;
        i++;
    }
    if(i == 0)
    {
        i++;
    }
    medianaBlock = medianaBlock / i;
    DataTable2 += "]";
}

<script src="~/Scripts/cldr.js"></script>
<script src="~/Scripts/cldr/event.js"></script>
<script src="~/Scripts/cldr/supplemental.js"></script>
<script src="~/Scripts/cldr/unresolved.js"></script>
<script src="~/Scripts/globalize.js"></script>
<script src="~/Scripts/globalize/message.js"></script>
<script src="~/Scripts/globalize/number.js"></script>
<script src="~/Scripts/globalize/currency.js"></script>
<script src="~/Scripts/globalize/date.js"></script>
<link href="~/Content/dx.spa.css" rel="stylesheet" />
<link href="~/Content/dx.common.css" rel="stylesheet" />
<link href="~/Content/dx.light.compact.css" rel="stylesheet" />
<script src="~/Scripts/dx.all.js"></script>

<script>
    $(function () {
        var pivotGridChart = $("#pivotgrid-chart").dxChart({
            commonSeriesSettings: {
                argumentField: "arg",
                type: "bar",
                showInLegend: false
            },
            series: [
                    {
                        label: {
                            visible : true
                        }
                    },
                    { valueField: "val1", color: "#007bff" },
                    { valueField: "val2" }
                ],
            size: {
                height: 320
            },
            tooltip: {
                enabled: true
            },
            animation: {
                duration: 1000,
                easing: "easeOutCubic",
                enabled: true,
                maxPointCountSupported: 300
            },
            title: {
                text: @Html.Raw(chartTitle)
            },
            adaptiveLayout: {
                width: 450
            },
            dataSource:
                @Html.Raw(DataTable),
        });
        var pivotGridChart2 = $("#pivotgrid-chart2").dxChart({
            commonSeriesSettings: {
                argumentField: "arg",
                type: "bar",
                showInLegend: false,
                valueField: "val2",
                color: "#BA4D51"
            },
            series: [
                    {
                        label: {
                            visible : true
                        }
                    }
            ],
            size: {
                height: 320
            },
            tooltip: {
                enabled: true
            },
            animation: {
                duration: 1000,
                easing: "easeOutCubic",
                enabled: true,
                maxPointCountSupported: 300
            },
            title: {
                text: @Html.Raw(String.Format("'Результаты ресторанов за {0}/{1}'", Model.date_end.Value.Month, Model.date_end.Value.Year))
            },
            adaptiveLayout: {
                width: 450
            },
            valueAxis: [{
                constantLines: [{
                    value: @Html.Raw((double)mediana),
                    color: "#fc3535",
                    dashStyle: "dash",
                    width: 2,
                    label: { visible: true }
                }]
            }],
            dataSource:
                @Html.Raw(DataTable),
        });
        var pivotGridChart3 = $("#pivotgrid-chart3").dxChart({
            commonSeriesSettings: {
                argumentField: "arg",
                type: "bar",
                showInLegend: false,
                color: "#BA4D51"
            },
            series: [
                    {
                        label: {
                            visible : true
                        }
                    },
                    { valueField: "val1" },
                    { valueField: "val2" }
            ],
            size: {
                height: 420
            },
            tooltip: {
                enabled: true
            },
            animation: {
                duration: 1000,
                easing: "easeOutCubic",
                enabled: true,
                maxPointCountSupported: 300
            },
            title: {
                text: @Html.Raw(String.Format("'Результаты ресторанов за {0}.{1} / {2}.{3} по блокам'", Model.date_start.Value.Month, Model.date_start.Value.Year, Model.date_end.Value.Month, Model.date_end.Value.Year))
            },
            adaptiveLayout: {
                width: 450
            },
            valueAxis: [{
                constantLines: [{
                    value: @Html.Raw(Math.Round((double)medianaBlock, 1)),
                    color: "#fc3535",
                    dashStyle: "dash",
                    width: 2,
                    label: { visible: true }
                }]
            }],
            argumentAxis: [{
                label: {
                    displayMode: "rotate",
                    rotationAngle: "50"
                }
            }],
            dataSource:
                @Html.Raw(DataTable2),
        });
    });

</script>
<div class="row">
    <div class="col-md-10 col-md-push-1">
        <div class="form-group">
            @using (Html.BeginForm("Analytics", "SKK", FormMethod.Post, new { id = "Form", enctype = "multipart/form-data" }))
            {
                @Html.EditorFor(m => m.date_start, new { @type = "date" })
                @Html.TextBoxFor(m => m.date_end, new { @type = "date" })
                <input type="submit" value="Пересоздать отчет за выбранные даты" class="btn btn-sm btn-info" />
            }

        </div>
        <div class="panel panel-yellow">
            <div class="panel-heading">
                <h3 class="panel-title">
                    Итоговые результаты по сети
                </h3>
            </div>
            <div class="panel-body">
                <table class="table table-bordered table-responsive">
                    <thead>
                        <tr>
                            <th>id</th>
                            <th>Ресторан</th>
                            <th>Общий процент</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var it in Model.PercentsList)
                        {
                            <tr>
                                <th>@it.restaurantID</th>
                                <th>@it.restaurantName</th>
                                <th>@it.percent%</th>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="demo-container">
                    <div id="pivotgrid-demo">
                        <div id="pivotgrid-chart"></div>
                    </div>
                </div>
                <div class="demo-container">
                    <div id="pivotgrid-demo">
                        <div id="pivotgrid-chart2"></div>
                    </div>
                </div>
                <div class="demo-container">
                    <div id="pivotgrid-demo">
                        <div id="pivotgrid-chart3"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
